Creating Dockerfile
docker build -t ajeetraina/alpine-git .
docker tag ajeetraina/alpine-git ajeetraina/labs-git:v1.0
docker images

=================
COPY takes in a src and destination.
It only lets you copy in a local file or directory from your host (the machine building the Docker image) into the Docker image itself.

ADD lets you do that too, but it also supports 2 other sources. First, you can use a URL instead of a local file / directory. 
Secondly, you can extract a tar file from the source directly into the destination.
======================

Volumes
=======
docker volume ls
docker volume create demo
docker inspect demo
docker volume rm demo

$ docker rm -f $(docker ps -a -q)
$ docker volume rm $(docker volume ls -q)


Letâ€™s run a container and mount the created volume to the root:
$ docker run -it -v my-volume:/data --name my-container selaworkshops/busybox:latest

Creating Volume Mount from docker run command & sharing same Volume Mounts among multiple containers




============================
============================

container 
docker search image
docker pull thatimage

docker image(whatever we want to install in docker it installs as layers) or artifact
docker container is when run that docker image it becomes a container

docker pull redis
docker images
docker ps

stop and running container docker ps -a

docker run -p6000:6379  --name ravikiran redis
docker run -d -p60001:6379 redis

if any issue if u want to stop and run container 

docker stop containerid
docker start containerid

docker logs imagename

docker exec -it

=======

bridge network - communication between containers . by default network in docker
host- remove network isolation between host and containers we can use host network directly. it is in used docker swarm
overlay network - mostly used in docker swarm. if u have  different docker daemon we want to connect it and communic with host
none- disable network
macvalan - it assign MAC address to container like its appears like a physcial device
example: 
host- -> enps(phys or virt)
we need to connect to container(the container has bridge network) 172.17.01
next whatever container we create it will create virtual ethernet

whenever connect to outside world we can communicate
if want to comes inside the container that won't work bcoz of NAT


using bridge network u can communicate outside world but u cannot communicate between containers bcoz there is no route

example :
run a container
docker network inspect bridge
inspect ip address created like default network, ip network 1 , ip network 2
docker attach apline1

if u dont want to exit directly ctr+pq(container will be detached mode)

create bridge network

docker run -dit --name apline1 --network alpine-net alpine

run a container

docker run -dit --name apline2 --network alpine-net alpine

create 3 bridge and 1 default network(DEFULT IS FOR FUN)

docker network connect bridge alpine4(apline4 container with bridge network)(now it will in defalut and bridge network)

If WE CONNECT BRIDGE ALPINE4 WE CAN PING APLINE4 IN ANY OF THE APLINE1,2,3  





























