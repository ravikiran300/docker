Dockerfile is a set of instructions and commands used to build an image

o Avoid unnecessary packages and files.
o Use multi-stage build.
o Keep number of layers to minimum.


COPY takes in a src and destination.
It only lets you copy in a local file or directory from your host (the machine building the Docker image) into the Docker image itself.

ADD lets you do that too, but it also supports 2 other sources. First, you can use a URL instead of a local file / directory. 
Secondly, you can extract a tar file from the source directly into the destination.


Frequently used Dockerfile Instructions:
 FROM
o Sets base/parent Image.

LABEL
o Adds metadata to the image.

RUN
o Creates new layer.

 EXPOSE
o Intend port to publish.

 CMD
o Setting default command for container. It can be overridden.
setting default command in Dockerfile as CMD

example:
FROM centos
CMD ["echo",Hello world"]
docker build -t myimg
docker run -it myimag /bin/bash

 ENV
o Set environment variables.
o Can be overridden by --env flag.
o ENV [Key]=[Value]
 USER
o Set user.

WORKDIR /home/ravikiran


 HEALTHCHECK
o Checks the health of a container by running a command inside the container.
o Can be only one Healthcheck instruction in a Dockerfile.
o Options for CMD:
 --interval=DURATION (default: 30s)
 --timeout=DURATION (default: 30s)
 --start-period=DURATION (default: 0s)
 --retries=N (default: 3)
HEALTHCHECK --interval=5s CMD curl localhost:<port>

 ARG
o Declared before the FROM instruction
its only print hello
2)it can overridden by using /bin/sh (a shell will open with -it)

==================================
 ENTRYPOINT
 If you want pass an option to exisiting command you are going to use entrypoint
 it will additonal argument to it. it can't overwritten by existing command
o Specify executable inside the container. It does not get overridden.
o However, it can be overridden by --entrypoint flag

FROM centos
ENTRYPOINT ["echo",Hello"]
its only print hello 
docker run -it myimag /bin/bash
print echo hello world /bin/bash
usecase: when you run application you don't want to user to override the default command




=======================================

FROM komljen/ubuntu
MAINTAINER Alen Komljen <alen.komljen@live.com>

RUN \
  apt-get update && \
  apt-get -y install \
          apache2 && \
  rm /var/www/html/index.html && \
  rm -rf /var/lib/apt/lists/*
  
  
  ========================================
  
  docker --help | grep -E "(export|import|load|save)"
  
  2

docker import is mostly used with a tarball that is created out of running container. 
For Eg. docker export containerID > /home/cntr.tar then import this tarball to an image Eg. docker import /home/cntr.tar mynewimage:tag

Whereas docker load is used to load the image from a tarball that is created from another image.
For Eg. docker save > /home/fromimg.tar then load it back with docker load < /home/fromimg.tar

the main difference though docker save/load with image does preserve the image history.
Whereas docker export/import with container flattens the image by removing all the history of the container.
  
  
